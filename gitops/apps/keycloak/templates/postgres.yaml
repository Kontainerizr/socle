---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: pg-cluster-keycloak
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1
  postgresql:
    parameters:
      max_worker_processes: "60"
      max_slot_wal_keep_size: 5GB
    pg_hba:
      # To access through TCP/IP you will need to get username
      # and password from the secret pg-cluster-keycloak-app
      - host keycloak keycloak all md5
      - host keycloak streaming_replica all md5
  bootstrap:
    initdb:
      database: keycloak
      owner: keycloak
    recovery: null
  primaryUpdateStrategy: unsupervised
  storage:
    size: 6Gi
  walStorage:
    size: 6Gi
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 2Gi
      cpu: 500m
  monitoring:
    enablePodMonitor: false


# ---
# apiVersion: v1
# kind: Secret
# type: Opaque
# metadata:
#   name: keycloak-pg-cluster-backup
#   annotations:
#     avp.kubernetes.io/remove-missing: "true"
# data:
#   DB_HOST: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.host} | base64encode>
#   DB_PORT: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.port} | base64encode>
#   DB_NAME: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.database} | base64encode>
#   DB_USER: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.app.username} | base64encode>
#   DB_PASS: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.app.password} | base64encode>
#   S3_ENDPOINT: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.endpoint} | base64encode>
#   S3_ACCESS_KEY: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.accessKey} | base64encode>
#   S3_SECRET_KEY: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.secretKey} | base64encode>
#   S3_BUCKET_NAME: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.bucketName} | base64encode>
#   S3_BUCKET_PREFIX: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.bucketPrefix} | base64encode>
#   RETENTION_DAYS: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.retentionDay} | base64encode>

# ---
# apiVersion: batch/v1
# kind: CronJob
# metadata:
#   name: keycloak-pg-cluster-backup
#   labels:
#     jobgroup: keycloak-pg-cluster-backup
# spec:
#   schedule: "0 1 * * *"
#   successfulJobsHistoryLimit: 1
#   failedJobsHistoryLimit: 3
#   concurrencyPolicy: Forbid
#   jobTemplate:
#     metadata:
#       name: keycloak-pg-cluster-backup
#       labels:
#         jobgroup: keycloak-pg-cluster-backup
#     spec:
#       backoffLimit: 0
#       template:
#         spec:
#           containers:
#           - name: keycloak-pg-cluster-backup
#             image: ghcr.io/this-is-tobi/tools/pg-backup:latest
#             imagePullPolicy: Always
#             envFrom:
#             - secretRef:
#                 name: keycloak-pg-cluster-backup
#           restartPolicy: Never
